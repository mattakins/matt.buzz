/* Dynamic Full-Viewport Layout */

.app-container {
  width: 100vw;
  height: 100vh;
  position: relative;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: stretch;
  padding: 0;
  margin: 0;
}

/* Force Framer components to fill the viewport dynamically */
.app-container > * {
  width: 100% !important;
  height: 100% !important;
  max-width: none !important;
  max-height: none !important;
  min-width: 100% !important;
  min-height: 100% !important;
  flex: 1;
}

/* Override Framer's fixed dimensions */
.app-container [data-framer-name] {
  width: 100% !important;
  height: auto !important;
  max-width: none !important;
  min-width: 100% !important;
}

/* Ensure main container scales properly */
.app-container main {
  width: 100% !important;
  height: 100% !important;
  max-width: none !important;
  min-width: 100% !important;
  display: flex !important;
  flex-direction: column !important;
}

/* Dynamic viewport units for better mobile support */
@supports (height: 100dvh) {
  .app-container {
    min-height: 100dvh;
  }
}

/* Let Framer handle element transitions */

/* High DPI display optimizations */
@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  body {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
}

/* Orientation change handling */
@media screen and (orientation: landscape) and (max-height: 500px) {
  .app-container {
    min-height: 100vh;
  }
}

/* Container queries for more granular control */
@container (min-width: 320px) {
  .app-container {
    container-type: inline-size;
  }
}

/* Focus and interaction improvements */
@media (hover: hover) and (pointer: fine) {
  /* Desktop/laptop with precise pointer */
  .app-container button,
  .app-container a {
    transition: all 0.2s ease;
  }
}

@media (hover: none) and (pointer: coarse) {
  /* Touch devices */
  .app-container button,
  .app-container a {
    min-height: 44px; /* iOS recommended touch target */
    min-width: 44px;
  }
}