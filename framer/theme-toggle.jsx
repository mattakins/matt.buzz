// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project cde98c358c3069ef "matt.buzz", do not edit manually */
"use client";

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
}} Props

 */
import { routes } from "./chunks/chunk-54YFTX6O.js";

// virtual:theme-toggle
import { Fragment as Fragment2 } from "react";
import { ContextProviders } from "unframer";

// /:https://framerusercontent.com/modules/jgIslV6DkYUXMZ0uI26K/AjDTf97rWQqjfzbF3mb9/sSE8Ks7U7.js
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import {
	addFonts,
	addPropertyControls,
	ControlType,
	cx,
	useActiveVariantCallback,
	useComponentViewport,
	useLocaleInfo,
	useVariantState,
	withCSS,
} from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
import { useRef } from "react";
var cycleOrder = [
	"TzgVzetvp",
	"IFTxxXlL5",
	"o3JNQH70g",
	"aexHCFV6M",
	"aP0q0e5A5",
	"Gwm03yRT0",
];
var serializationHash = "framer-3xezE";
var variantClassNames = {
	aexHCFV6M: "framer-v-1jbzxed",
	aP0q0e5A5: "framer-v-kvxn8m",
	Gwm03yRT0: "framer-v-1kh6mqi",
	IFTxxXlL5: "framer-v-e0hg4x",
	o3JNQH70g: "framer-v-gi2qwb",
	TzgVzetvp: "framer-v-1dv85bt",
};
function addPropertyOverrides(overrides, ...variants) {
	const nextOverrides = {};
	variants?.forEach(
		(variant) => variant && Object.assign(nextOverrides, overrides[variant]),
	);
	return nextOverrides;
}
var transition1 = {
	damping: 60,
	delay: 0,
	mass: 1,
	stiffness: 400,
	type: "spring",
};
var transformTemplate1 = (_, t) => `translateY(-50%) ${t}`;
var Transition = ({ value, children }) => {
	const config = React.useContext(MotionConfigContext);
	const transition = value ?? config.transition;
	const contextValue = React.useMemo(
		() => ({
			...config,
			transition,
		}),
		[JSON.stringify(transition)],
	);
	return (
		<MotionConfigContext.Provider value={contextValue}>
			{children}
		</MotionConfigContext.Provider>
	);
};
var Variants = motion.create(React.Fragment);
var humanReadableVariantMap = {
	"Click 1": "o3JNQH70g",
	"Click 2": "Gwm03yRT0",
	"Hover 1": "IFTxxXlL5",
	"Hover 2": "aexHCFV6M",
	Desktop: "TzgVzetvp",
	Phone: "aP0q0e5A5",
};
var getProps = ({ height, id, width, ...props }) => {
	return {
		...props,
		variant:
			humanReadableVariantMap[props.variant] ?? props.variant ?? "TzgVzetvp",
	};
};
var createLayoutDependency = (props, variants) => {
	if (props.layoutDependency)
		return variants.join("-") + props.layoutDependency;
	return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
	const fallbackRef = useRef(null);
	const refBinding = ref ?? fallbackRef;
	const defaultLayoutId = React.useId();
	const { activeLocale, setLocale } = useLocaleInfo();
	const componentViewport = useComponentViewport();
	const { style, className, layoutId, variant, ...restProps } = getProps(props);
	const {
		baseVariant,
		classNames,
		clearLoadingGesture,
		gestureHandlers,
		gestureVariant,
		isLoading,
		setGestureState,
		setVariant,
		variants,
	} = useVariantState({
		cycleOrder,
		defaultVariant: "TzgVzetvp",
		ref: refBinding,
		variant,
		variantClassNames,
	});
	const layoutDependency = createLayoutDependency(props, variants);
	const { activeVariantCallback, delay } =
		useActiveVariantCallback(baseVariant);
	const onMouseEnter1lsoaic = activeVariantCallback(async (...args) => {
		setGestureState({
			isHovered: true,
		});
		setVariant("IFTxxXlL5");
	});
	const onTap1whdpi7 = activeVariantCallback(async (...args) => {
		setGestureState({
			isPressed: false,
		});
		setVariant("o3JNQH70g");
	});
	const onMouseLeave1ufj0yr = activeVariantCallback(async (...args) => {
		setGestureState({
			isHovered: false,
		});
		setVariant("TzgVzetvp");
	});
	const onTap7icqh = activeVariantCallback(async (...args) => {
		setGestureState({
			isPressed: false,
		});
		setVariant("IFTxxXlL5");
	});
	const onMouseLeave101u1ud = activeVariantCallback(async (...args) => {
		setGestureState({
			isHovered: false,
		});
		setVariant("aexHCFV6M");
	});
	const onMouseEnterdaku8x = activeVariantCallback(async (...args) => {
		setGestureState({
			isHovered: true,
		});
		setVariant("o3JNQH70g");
	});
	const onTap1r5daoc = activeVariantCallback(async (...args) => {
		setGestureState({
			isPressed: false,
		});
		setVariant("Gwm03yRT0");
	});
	const onTap1f3uzcf = activeVariantCallback(async (...args) => {
		setGestureState({
			isPressed: false,
		});
		setVariant("aP0q0e5A5");
	});
	const sharedStyleClassNames = [];
	const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
	return (
		<LayoutGroup id={layoutId ?? defaultLayoutId}>
			<Variants animate={variants} initial={false}>
				<Transition value={transition1}>
					<motion.div
						{...restProps}
						{...gestureHandlers}
						className={cx(
							scopingClassNames,
							"framer-1dv85bt",
							className,
							classNames,
						)}
						data-framer-name={"Desktop"}
						data-highlight={true}
						layoutDependency={layoutDependency}
						layoutId={"TzgVzetvp"}
						onMouseEnter={onMouseEnter1lsoaic}
						ref={refBinding}
						style={{
							...style,
						}}
						{...addPropertyOverrides(
							{
								aexHCFV6M: {
									"data-framer-name": "Hover 2",
									onMouseEnter: onMouseEnterdaku8x,
								},
								aP0q0e5A5: {
									"data-framer-name": "Phone",
									onMouseEnter: void 0,
									onTap: onTap1r5daoc,
								},
								Gwm03yRT0: {
									"data-framer-name": "Click 2",
									onMouseEnter: void 0,
									onTap: onTap1f3uzcf,
								},
								IFTxxXlL5: {
									"data-framer-name": "Hover 1",
									onMouseEnter: void 0,
									onMouseLeave: onMouseLeave1ufj0yr,
									onTap: onTap1whdpi7,
								},
								o3JNQH70g: {
									"data-framer-name": "Click 1",
									onMouseEnter: void 0,
									onMouseLeave: onMouseLeave101u1ud,
									onTap: onTap7icqh,
								},
							},
							baseVariant,
							gestureVariant,
						)}
					>
						<motion.div
							className={"framer-tfb725"}
							data-framer-name={"Frame"}
							layoutDependency={layoutDependency}
							layoutId={"paK_TAVDa"}
							style={{
								backgroundColor:
									"var(--token-ca1e8363-88d0-40f1-abb8-1f9ce6252271, rgb(255, 255, 255))",
								borderBottomLeftRadius: 32,
								borderBottomRightRadius: 32,
								borderTopLeftRadius: 32,
								borderTopRightRadius: 32,
								opacity: 0.16,
							}}
						/>
						<motion.div
							className={"framer-9epx9i"}
							data-framer-name={"Dot"}
							layoutDependency={layoutDependency}
							layoutId={"B3kwrrJPs"}
							style={{
								backgroundColor:
									"var(--token-ca1e8363-88d0-40f1-abb8-1f9ce6252271, rgb(255, 255, 255))",
								borderBottomLeftRadius: "50%",
								borderBottomRightRadius: "50%",
								borderTopLeftRadius: "50%",
								borderTopRightRadius: "50%",
							}}
							transformTemplate={transformTemplate1}
						/>
					</motion.div>
				</Transition>
			</Variants>
		</LayoutGroup>
	);
});
var css = [
	"@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
	".framer-3xezE.framer-bhmbjz, .framer-3xezE .framer-bhmbjz { display: block; }",
	".framer-3xezE.framer-1dv85bt { height: 14px; overflow: hidden; position: relative; width: 14px; }",
	".framer-3xezE .framer-tfb725 { bottom: 0px; flex: none; left: 0px; overflow: visible; position: absolute; right: 0px; top: 0px; }",
	".framer-3xezE .framer-9epx9i { aspect-ratio: 1 / 1; flex: none; height: var(--framer-aspect-ratio-supported, 13px); left: 0px; overflow: visible; position: absolute; top: 50%; width: 14px; }",
	".framer-3xezE.framer-v-e0hg4x.framer-1dv85bt, .framer-3xezE.framer-v-gi2qwb.framer-1dv85bt, .framer-3xezE.framer-v-kvxn8m.framer-1dv85bt, .framer-3xezE.framer-v-1kh6mqi.framer-1dv85bt { cursor: pointer; height: 18px; width: 32px; }",
	".framer-3xezE.framer-v-e0hg4x .framer-9epx9i, .framer-3xezE.framer-v-kvxn8m .framer-9epx9i { height: var(--framer-aspect-ratio-supported, 14px); left: 2px; }",
	".framer-3xezE.framer-v-gi2qwb .framer-9epx9i, .framer-3xezE.framer-v-1kh6mqi .framer-9epx9i { height: var(--framer-aspect-ratio-supported, 14px); left: unset; right: 2px; }",
];
var FramersSE8Ks7U7 = withCSS(Component, css, "framer-3xezE");
var stdin_default = FramersSE8Ks7U7;
FramersSE8Ks7U7.displayName = "Theme Toggle";
FramersSE8Ks7U7.defaultProps = {
	height: 14,
	width: 14,
};
addPropertyControls(FramersSE8Ks7U7, {
	variant: {
		options: [
			"TzgVzetvp",
			"IFTxxXlL5",
			"o3JNQH70g",
			"aexHCFV6M",
			"aP0q0e5A5",
			"Gwm03yRT0",
		],
		optionTitles: [
			"Desktop",
			"Hover 1",
			"Click 1",
			"Hover 2",
			"Phone",
			"Click 2",
		],
		title: "Variant",
		type: ControlType.Enum,
	},
});
addFonts(
	FramersSE8Ks7U7,
	[
		{
			explicitInter: true,
			fonts: [],
		},
	],
	{
		supportsExplicitInterCodegen: true,
	},
);

// virtual:theme-toggle
import { WithFramerBreakpoints } from "unframer";
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"cde98c358c3069ef2a8dce28a8c2c8459e940a47824cf38ac0a6e3a305f8bfbb"
			}
			locale={locale}
			locales={locales}
		>
			{jsx(stdin_default, {
				...rest,
			})}
		</ContextProviders>
	);
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders ThemeToggleFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = "", ...rest }) => {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"cde98c358c3069ef2a8dce28a8c2c8459e940a47824cf38ac0a6e3a305f8bfbb"
			}
			locale={locale}
			locales={locales}
		>
			<WithFramerBreakpoints
				Component={stdin_default}
				variants={defaultResponsiveVariants}
				{...rest}
			/>
		</ContextProviders>
	);
};
Object.assign(ComponentWithRoot, stdin_default);
var theme_toggle_default = ComponentWithRoot;
export { theme_toggle_default as default };
