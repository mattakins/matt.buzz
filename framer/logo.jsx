// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project cde98c358c3069ef "matt.buzz", do not edit manually */
"use client";

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
}} Props

 */
import { className, css, fonts } from "./chunks/shared-fonts.js";
import { routes } from "./chunks/routes.js";

// virtual:logo
import { Fragment as Fragment2 } from "react";
import { ContextProviders } from "unframer";

// /:https://framerusercontent.com/modules/VZTMd81wWJ1yQHYS8ZaD/UNZacj9M3DvoOqTQ6aNY/GgrtPuQqi.js
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import {
	addFonts,
	addPropertyControls,
	ControlType,
	cx,
	getFontsFromSharedStyle,
	Link,
	RichText,
	SVG,
	useComponentViewport,
	useLocaleInfo,
	useVariantState,
	withCSS,
} from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
import { useRef } from "react";
var enabledGestures = {
	Brw2_DrkB: {
		hover: true,
	},
};
var cycleOrder = ["Brw2_DrkB", "yncl8rBTV"];
var serializationHash = "framer-e34MP";
var variantClassNames = {
	Brw2_DrkB: "framer-v-1fxl2nl",
	yncl8rBTV: "framer-v-yzafng",
};
function addPropertyOverrides(overrides, ...variants) {
	const nextOverrides = {};
	variants?.forEach(
		(variant) => variant && Object.assign(nextOverrides, overrides[variant]),
	);
	return nextOverrides;
}
var transition1 = {
	damping: 80,
	delay: 0,
	mass: 1,
	stiffness: 400,
	type: "spring",
};
var Transition = ({ value, children }) => {
	const config = React.useContext(MotionConfigContext);
	const transition = value ?? config.transition;
	const contextValue = React.useMemo(
		() => ({
			...config,
			transition,
		}),
		[JSON.stringify(transition)],
	);
	return (
		<MotionConfigContext.Provider value={contextValue}>
			{children}
		</MotionConfigContext.Provider>
	);
};
var Variants = motion.create(React.Fragment);
var humanReadableVariantMap = {
	Desktop: "Brw2_DrkB",
	Phone: "yncl8rBTV",
};
var getProps = ({ backIcon, height, id, link, name1, width, ...props }) => {
	return {
		...props,
		rBHQvKcR2: backIcon ?? props.rBHQvKcR2,
		SUjRmu0TT: link ?? props.SUjRmu0TT,
		variant:
			humanReadableVariantMap[props.variant] ?? props.variant ?? "Brw2_DrkB",
		z7WESOA3t: name1 ?? props.z7WESOA3t ?? "Name",
	};
};
var createLayoutDependency = (props, variants) => {
	if (props.layoutDependency)
		return variants.join("-") + props.layoutDependency;
	return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
	const fallbackRef = useRef(null);
	const refBinding = ref ?? fallbackRef;
	const defaultLayoutId = React.useId();
	const { activeLocale, setLocale } = useLocaleInfo();
	const componentViewport = useComponentViewport();
	const {
		style,
		className: className2,
		layoutId,
		variant,
		z7WESOA3t,
		rBHQvKcR2,
		SUjRmu0TT,
		...restProps
	} = getProps(props);
	const {
		baseVariant,
		classNames,
		clearLoadingGesture,
		gestureHandlers,
		gestureVariant,
		isLoading,
		setGestureState,
		setVariant,
		variants,
	} = useVariantState({
		cycleOrder,
		defaultVariant: "Brw2_DrkB",
		enabledGestures,
		ref: refBinding,
		variant,
		variantClassNames,
	});
	const layoutDependency = createLayoutDependency(props, variants);
	const sharedStyleClassNames = [className];
	const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
	const isDisplayed = () => {
		if (baseVariant === "yncl8rBTV") return false;
		return true;
	};
	return (
		<LayoutGroup id={layoutId ?? defaultLayoutId}>
			<Variants animate={variants} initial={false}>
				<Transition value={transition1}>
					<Link
						href={SUjRmu0TT}
						motionChild={true}
						nodeId={"Brw2_DrkB"}
						openInNewTab={false}
						scopeId={"GgrtPuQqi"}
						smoothScroll={true}
					>
						<motion.a
							{...restProps}
							{...gestureHandlers}
							className={`${cx(scopingClassNames, "framer-1fxl2nl", className2, classNames)} framer-18q79sz`}
							data-framer-name={"Desktop"}
							layoutDependency={layoutDependency}
							layoutId={"Brw2_DrkB"}
							ref={refBinding}
							style={{
								...style,
							}}
							{...addPropertyOverrides(
								{
									"Brw2_DrkB-hover": {
										"data-framer-name": void 0,
									},
									yncl8rBTV: {
										"data-framer-name": "Phone",
									},
								},
								baseVariant,
								gestureVariant,
							)}
						>
							<motion.div
								className={"framer-a1bcss"}
								data-framer-name={"Text"}
								layoutDependency={layoutDependency}
								layoutId={"ktt8iRWXB"}
							>
								<motion.div
									className={"framer-1w9wk7c"}
									data-framer-name={"Top"}
									layoutDependency={layoutDependency}
									layoutId={"pxfcezWgp"}
									style={{
										skewY: 0,
									}}
									variants={{
										"Brw2_DrkB-hover": {
											skewY: 12,
										},
									}}
								>
									{rBHQvKcR2 && (
										<motion.div
											className={"framer-1m11gmp"}
											data-framer-name={"Icon"}
											layoutDependency={layoutDependency}
											layoutId={"wl4IA5C4S"}
											style={{
												rotate: -180,
											}}
										>
											<SVG
												className={"framer-4u96ec"}
												data-framer-name={"Arrow-right"}
												layout={"position"}
												layoutDependency={layoutDependency}
												layoutId={"qkjpHHwu_"}
												opacity={1}
												svg={
													'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 14 12"><path d="M 0.702 5.653 L 11.484 5.653 L 6.863 1.032 L 7.444 0.372 L 13.165 6.093 L 7.444 11.813 L 6.863 11.153 L 11.484 6.533 L 0.702 6.533 Z" fill="var(--token-ca1e8363-88d0-40f1-abb8-1f9ce6252271, rgb(255, 255, 255))"></path></svg>'
												}
												svgContentId={12663815606}
												withExternalLayout={true}
												{...addPropertyOverrides(
													{
														yncl8rBTV: {
															svg: '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 13 11"><path d="M 0.652 5.181 L 10.664 5.181 L 6.373 0.946 L 6.912 0.341 L 12.225 5.585 L 6.912 10.829 L 6.373 10.224 L 10.664 5.988 L 0.652 5.988 Z" fill="var(--token-ca1e8363-88d0-40f1-abb8-1f9ce6252271, rgb(255, 255, 255))"></path></svg>',
															svgContentId: 12808819670,
														},
													},
													baseVariant,
													gestureVariant,
												)}
											/>
										</motion.div>
									)}
									<RichText
										__fromCanvasComponent={true}
										className={"framer-19nmce6"}
										data-framer-name={"Text"}
										fonts={["Inter"]}
										layoutDependency={layoutDependency}
										layoutId={"avaqWNmt9"}
										style={{
											"--extracted-r6o4lv":
												"var(--token-ca1e8363-88d0-40f1-abb8-1f9ce6252271, rgb(255, 255, 255))",
											"--framer-link-text-color": "rgb(0, 153, 255)",
											"--framer-link-text-decoration": "underline",
											skewY: 0,
										}}
										text={z7WESOA3t}
										variants={{
											"Brw2_DrkB-hover": {
												skewY: 12,
											},
										}}
										verticalAlignment={"top"}
										withExternalLayout={true}
									>
										<React.Fragment>
											<motion.p
												className={"framer-styles-preset-158jz12"}
												data-styles-preset={"wHrcYNopH"}
												style={{
													"--framer-text-color":
														"var(--extracted-r6o4lv, var(--token-ca1e8363-88d0-40f1-abb8-1f9ce6252271, rgb(255, 255, 255)))",
												}}
											>
												{"Name"}
											</motion.p>
										</React.Fragment>
									</RichText>
								</motion.div>
								{isDisplayed() && (
									<motion.div
										className={"framer-gt12yf"}
										data-framer-name={"Bottom"}
										layoutDependency={layoutDependency}
										layoutId={"LQJEZqzXq"}
										style={{
											skewY: 12,
										}}
										variants={{
											"Brw2_DrkB-hover": {
												skewY: 0,
											},
										}}
									>
										{rBHQvKcR2 && (
											<motion.div
												className={"framer-wlewh0"}
												data-framer-name={"Icon"}
												layoutDependency={layoutDependency}
												layoutId={"ccM1dYW8E"}
												style={{
													rotate: -180,
												}}
											>
												<SVG
													className={"framer-1ke76ve"}
													data-framer-name={"Arrow-right"}
													layout={"position"}
													layoutDependency={layoutDependency}
													layoutId={"Px9oEybxE"}
													opacity={1}
													svg={
														'<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 12 12"><path d="M 0.227 5.681 L 10.11 5.681 L 5.875 1.446 L 6.407 0.841 L 11.651 6.085 L 6.407 11.329 L 5.875 10.724 L 10.11 6.488 L 0.227 6.488 Z" fill="var(--token-ca1e8363-88d0-40f1-abb8-1f9ce6252271, rgb(255, 255, 255))"></path></svg>'
													}
													svgContentId={10728380097}
													withExternalLayout={true}
												/>
											</motion.div>
										)}
										<RichText
											__fromCanvasComponent={true}
											className={"framer-n207mg"}
											data-framer-name={"Text"}
											fonts={["Inter"]}
											layoutDependency={layoutDependency}
											layoutId={"Rw9CVMdt_"}
											style={{
												"--extracted-r6o4lv":
													"var(--token-ca1e8363-88d0-40f1-abb8-1f9ce6252271, rgb(255, 255, 255))",
												"--framer-link-text-color": "rgb(0, 153, 255)",
												"--framer-link-text-decoration": "underline",
											}}
											text={z7WESOA3t}
											verticalAlignment={"top"}
											withExternalLayout={true}
										>
											<React.Fragment>
												<motion.p
													className={"framer-styles-preset-158jz12"}
													data-styles-preset={"wHrcYNopH"}
													style={{
														"--framer-text-color":
															"var(--extracted-r6o4lv, var(--token-ca1e8363-88d0-40f1-abb8-1f9ce6252271, rgb(255, 255, 255)))",
													}}
												>
													{"Name"}
												</motion.p>
											</React.Fragment>
										</RichText>
									</motion.div>
								)}
							</motion.div>
						</motion.a>
					</Link>
				</Transition>
			</Variants>
		</LayoutGroup>
	);
});
var css2 = [
	"@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
	".framer-e34MP.framer-18q79sz, .framer-e34MP .framer-18q79sz { display: block; }",
	".framer-e34MP.framer-1fxl2nl { align-content: center; align-items: center; cursor: pointer; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 4px; height: min-content; justify-content: center; overflow: hidden; padding: 0px; position: relative; text-decoration: none; width: min-content; }",
	".framer-e34MP .framer-a1bcss { align-content: flex-start; align-items: flex-start; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 12px; height: 23px; justify-content: flex-start; overflow: hidden; padding: 0px; position: relative; width: min-content; }",
	".framer-e34MP .framer-1w9wk7c, .framer-e34MP .framer-gt12yf { align-content: center; align-items: center; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 8px; height: min-content; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: min-content; }",
	".framer-e34MP .framer-1m11gmp, .framer-e34MP .framer-wlewh0 { align-content: center; align-items: center; display: flex; flex: none; flex-direction: column; flex-wrap: nowrap; gap: 0px; height: min-content; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: min-content; }",
	".framer-e34MP .framer-4u96ec { flex: none; height: 12px; position: relative; width: 14px; }",
	".framer-e34MP .framer-19nmce6, .framer-e34MP .framer-n207mg { flex: none; height: auto; position: relative; white-space: pre; width: auto; }",
	".framer-e34MP .framer-1ke76ve { flex: none; height: 12px; position: relative; width: 12px; }",
	".framer-e34MP.framer-v-yzafng.framer-1fxl2nl { cursor: unset; }",
	".framer-e34MP.framer-v-yzafng .framer-a1bcss { height: 20px; }",
	".framer-e34MP.framer-v-yzafng .framer-1w9wk7c { gap: 6px; }",
	".framer-e34MP.framer-v-yzafng .framer-4u96ec { height: 11px; width: 13px; }",
	".framer-e34MP.framer-v-1fxl2nl.hover .framer-a1bcss { justify-content: flex-end; }",
	...css,
];
var FramerGgrtPuQqi = withCSS(Component, css2, "framer-e34MP");
var stdin_default = FramerGgrtPuQqi;
FramerGgrtPuQqi.displayName = "Logo";
FramerGgrtPuQqi.defaultProps = {
	height: 23,
	width: 44,
};
addPropertyControls(FramerGgrtPuQqi, {
	variant: {
		options: ["Brw2_DrkB", "yncl8rBTV"],
		optionTitles: ["Desktop", "Phone"],
		title: "Variant",
		type: ControlType.Enum,
	},
	z7WESOA3t: {
		defaultValue: "Name",
		displayTextArea: false,
		title: "Name",
		type: ControlType.String,
	},
	rBHQvKcR2: {
		defaultValue: false,
		title: "Back Icon",
		type: ControlType.Boolean,
	},
	SUjRmu0TT: {
		title: "Link",
		type: ControlType.Link,
	},
});
addFonts(
	FramerGgrtPuQqi,
	[
		{
			explicitInter: true,
			fonts: [
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F",
					url: "https://framerusercontent.com/assets/5vvr9Vy74if2I6bQbJvbw7SY1pQ.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116",
					url: "https://framerusercontent.com/assets/EOr0mi4hNtlgWNn9if640EZzXCo.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+1F00-1FFF",
					url: "https://framerusercontent.com/assets/Y9k9QrlZAqio88Klkmbd8VoMQc.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0370-03FF",
					url: "https://framerusercontent.com/assets/OYrD2tBIBPvoJXiIHnLoOXnY9M.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF",
					url: "https://framerusercontent.com/assets/JeYwfuaPfZHQhEG8U5gtPDZ7WQ.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD",
					url: "https://framerusercontent.com/assets/vQyevYAyHtARFwPqUzQGpnDs.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB",
					url: "https://framerusercontent.com/assets/b6Y37FthZeALduNqHicBT6FutY.woff2",
					weight: "400",
				},
			],
		},
		...getFontsFromSharedStyle(fonts),
	],
	{
		supportsExplicitInterCodegen: true,
	},
);

// virtual:logo
import { WithFramerBreakpoints } from "unframer";
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {
	base: "yncl8rBTV",
	xl: "Brw2_DrkB",
};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"cde98c358c3069ef2a8dce28a8c2c8459e940a47824cf38ac0a6e3a305f8bfbb"
			}
			locale={locale}
			locales={locales}
		>
			{jsx(stdin_default, {
				...rest,
			})}
		</ContextProviders>
	);
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders LogoFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = "", ...rest }) => {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"cde98c358c3069ef2a8dce28a8c2c8459e940a47824cf38ac0a6e3a305f8bfbb"
			}
			locale={locale}
			locales={locales}
		>
			<WithFramerBreakpoints
				Component={stdin_default}
				variants={defaultResponsiveVariants}
				{...rest}
			/>
		</ContextProviders>
	);
};
Object.assign(ComponentWithRoot, stdin_default);
var logo_default = ComponentWithRoot;
export { logo_default as default };
