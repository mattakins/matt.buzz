// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project cde98c358c3069ef "matt.buzz", do not edit manually */

//=====================================================================================
// IMPORTS & DEPENDENCIES
//=====================================================================================

// Ticker component import
import {
  Ticker
} from "./ticker.js";

// Framer/React imports
import { jsx as _jsx } from "react/jsx-runtime";
import {
  addFonts,
  addPropertyControls,
  ComponentViewportProvider,
  ControlType,
  cx,
  getFonts,
  getFontsFromSharedStyle,
  RichText,
  SmartComponentScopedContainer,
  useComponentViewport,
  useLocaleInfo,
  useVariantState,
  withCSS
} from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
import { useRef } from "react";

//=====================================================================================
// TYPOGRAPHY & STYLE DEFINITIONS
//=====================================================================================

// Load custom fonts
import { fontStore } from "unframer";
fontStore.loadFonts(["BI;Open Sauce Sans/Medium/v0"]);

// Font definitions with Open Sauce Sans
var fonts = [{
  explicitInter: true,
  fonts: [{
    family: "Open Sauce Sans",
    source: "builtIn",
    style: "normal",
    url: "https://framerusercontent.com/assets/O2R7AhA6wjBk0GHLJl0N8fqxN0.woff2",
    weight: "500"
  }]
}];

// Responsive typography styles for different breakpoints
var css = [
  // Base desktop styles (80px font size)
  '.framer-A0XR1 .framer-styles-preset-1gas3yb:not(.rich-text-wrapper), .framer-A0XR1 .framer-styles-preset-1gas3yb.rich-text-wrapper p { --framer-font-family: "Open Sauce Sans", "Open Sauce Sans Placeholder", sans-serif; --framer-font-open-type-features: normal; --framer-font-size: 80px; --framer-font-style: normal; --framer-font-variation-axes: normal; --framer-font-weight: 500; --framer-letter-spacing: -0.02em; --framer-line-height: 1.2em; --framer-paragraph-spacing: 0px; --framer-text-alignment: start; --framer-text-color: var(--token-5fde730a-8086-4528-a317-d71b3bf4efde, #ffffff); --framer-text-decoration: none; --framer-text-stroke-color: initial; --framer-text-stroke-width: initial; --framer-text-transform: uppercase; }',

  // Large desktop (1025px - 1439px) - same as base
  '@media (max-width: 1439px) and (min-width: 1025px) { .framer-A0XR1 .framer-styles-preset-1gas3yb:not(.rich-text-wrapper), .framer-A0XR1 .framer-styles-preset-1gas3yb.rich-text-wrapper p { --framer-font-family: "Open Sauce Sans", "Open Sauce Sans Placeholder", sans-serif; --framer-font-open-type-features: normal; --framer-font-size: 80px; --framer-font-style: normal; --framer-font-variation-axes: normal; --framer-font-weight: 500; --framer-letter-spacing: -0.02em; --framer-line-height: 1.2em; --framer-paragraph-spacing: 0px; --framer-text-alignment: start; --framer-text-color: var(--token-5fde730a-8086-4528-a317-d71b3bf4efde, #ffffff); --framer-text-decoration: none; --framer-text-stroke-color: initial; --framer-text-stroke-width: initial; --framer-text-transform: uppercase; } }',

  // Tablet (700px - 1024px) - reduced to 56px
  '@media (max-width: 1024px) and (min-width: 700px) { .framer-A0XR1 .framer-styles-preset-1gas3yb:not(.rich-text-wrapper), .framer-A0XR1 .framer-styles-preset-1gas3yb.rich-text-wrapper p { --framer-font-family: "Open Sauce Sans", "Open Sauce Sans Placeholder", sans-serif; --framer-font-open-type-features: normal; --framer-font-size: 56px; --framer-font-style: normal; --framer-font-variation-axes: normal; --framer-font-weight: 500; --framer-letter-spacing: -0.02em; --framer-line-height: 1.2em; --framer-paragraph-spacing: 0px; --framer-text-alignment: start; --framer-text-color: var(--token-5fde730a-8086-4528-a317-d71b3bf4efde, #ffffff); --framer-text-decoration: none; --framer-text-stroke-color: initial; --framer-text-stroke-width: initial; --framer-text-transform: uppercase; } }',

  // Mobile (0px - 699px) - reduced to 40px
  '@media (max-width: 699px) and (min-width: 0px) { .framer-A0XR1 .framer-styles-preset-1gas3yb:not(.rich-text-wrapper), .framer-A0XR1 .framer-styles-preset-1gas3yb.rich-text-wrapper p { --framer-font-family: "Open Sauce Sans", "Open Sauce Sans Placeholder", sans-serif; --framer-font-open-type-features: normal; --framer-font-size: 40px; --framer-font-style: normal; --framer-font-variation-axes: normal; --framer-font-weight: 500; --framer-letter-spacing: -0.02em; --framer-line-height: 1.2em; --framer-paragraph-spacing: 0px; --framer-text-alignment: start; --framer-text-color: var(--token-5fde730a-8086-4528-a317-d71b3bf4efde, #ffffff); --framer-text-decoration: none; --framer-text-stroke-color: initial; --framer-text-stroke-width: initial; --framer-text-transform: uppercase; } }'
];

// CSS class name for typography
var className = "framer-A0XR1";

//=====================================================================================
// CONFIGURATION & CONSTANTS
//=====================================================================================

// Font configuration for ticker
var TickerFonts = getFonts(Ticker);

// Component serialization hash for CSS scoping
var serializationHash = "framer-B9zhW";

// Variant class names mapping
var variantClassNames = {
  otkPkq2LA: "framer-v-xknm58"
};

// Spring transition configuration for smooth animations
var transition1 = {
  bounce: 0.2,
  delay: 0,
  duration: 0.4,
  type: "spring"
};

//=====================================================================================
// UTILITY FUNCTIONS
//=====================================================================================

// Checks if a value is set (not empty, undefined, or null)
var isSet = (value) => {
  if (Array.isArray(value)) return value.length > 0;
  return value !== void 0 && value !== null && value !== "";
};

// Transition wrapper component for motion config
var Transition = ({ value, children }) => {
  const config = React.useContext(MotionConfigContext);
  const transition = value ?? config.transition;
  const contextValue = React.useMemo(() => ({ ...config, transition }), [JSON.stringify(transition)]);
  return /* @__PURE__ */ _jsx(MotionConfigContext.Provider, { value: contextValue, children });
};

// Variants wrapper for motion fragments
var Variants = motion.create(React.Fragment);

//=====================================================================================
// PROPS MAPPING & UTILITIES
//=====================================================================================

// Maps external prop names to internal prop names for ticker text content
var getProps = ({
  height,
  id,
  speed,
  width,
  word1,
  word2,
  word3,
  ...props
}) => {
  return {
    ...props,
    // Ticker text content with default values
    AW9pUoArR: word3 ?? props.AW9pUoArR ?? " Framer Development •",   // Word 3
    Oho2iCzl9: speed ?? props.Oho2iCzl9 ?? 80,                        // Scroll speed
    px8arhzxh: word1 ?? props.px8arhzxh ?? " Digital Design •",       // Word 1
    YqnkipU9c: word2 ?? props.YqnkipU9c ?? " Art Direction •"         // Word 2
  };
};

// Creates layout dependency string from props and variants
var createLayoutDependency = (props, variants) => {
  if (props.layoutDependency) return variants.join("-") + props.layoutDependency;
  return variants.join("-");
};

//=====================================================================================
// MAIN COMPONENT - SCROLLING TEXT TICKER
//=====================================================================================

// Ticker component displaying horizontally scrolling service/skill text
var Component = /* @__PURE__ */ React.forwardRef(function(props, ref) {
  // Ref handling
  const fallbackRef = useRef(null);
  const refBinding = ref ?? fallbackRef;

  // Layout and locale setup
  const defaultLayoutId = React.useId();
  const { activeLocale, setLocale } = useLocaleInfo();
  const componentViewport = useComponentViewport();

  // Extract props with ticker text content
  const {
    style,
    className: className2,
    layoutId,
    variant,
    // Ticker text content
    px8arhzxh,  // Word 1: "Digital Design •"
    YqnkipU9c,  // Word 2: "Art Direction •"
    AW9pUoArR,  // Word 3: "Framer Development •"
    Oho2iCzl9,  // Scroll speed
    ...restProps
  } = getProps(props);

  // Variant state management
  const {
    baseVariant,
    classNames,
    clearLoadingGesture,
    gestureHandlers,
    gestureVariant,
    isLoading,
    setGestureState,
    setVariant,
    variants
  } = useVariantState({
    defaultVariant: "otkPkq2LA",
    ref: refBinding,
    variant,
    variantClassNames
  });

  // Layout dependency and styling
  const layoutDependency = createLayoutDependency(props, variants);
  const sharedStyleClassNames = [className];
  const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);

  // Visibility checks for conditional rendering
  const visible = isSet(YqnkipU9c);   // Show Word 2 if content exists
  const visible1 = isSet(AW9pUoArR);  // Show Word 3 if content exists

  //===================================================================================
  // TEXT SLOT COMPONENTS
  //===================================================================================

  // Helper function to create text slot for ticker
  const createTextSlot = (className, dataFramerName, layoutId, textLayoutId, textContent) => {
    return _jsx(motion.div, {
      className: className,
      "data-framer-name": dataFramerName,
      layoutDependency,
      layoutId: layoutId,
      children: _jsx(RichText, {
        __fromCanvasComponent: true,
        children: _jsx(React.Fragment, {
          children: _jsx(motion.p, {
            className: "framer-styles-preset-1gas3yb",
            "data-styles-preset": "G59h8taEB",
            children: textContent
          })
        }),
        className: textLayoutId === "lLO1STnRu" ? "framer-wo9h6s" :
                   textLayoutId === "xyfJvycAc" ? "framer-1bgl0yw" : "framer-srdplu",
        "data-framer-name": "Text",
        fonts: ["Inter"],
        layoutDependency,
        layoutId: textLayoutId,
        style: {
          "--framer-link-text-color": "rgb(0, 153, 255)",
          "--framer-link-text-decoration": "underline"
        },
        text: textContent,
        verticalAlignment: "top",
        withExternalLayout: true
      })
    });
  };

  //===================================================================================
  // RENDER
  //===================================================================================

  return _jsx(LayoutGroup, {
    id: layoutId ?? defaultLayoutId,
    children: _jsx(Variants, {
      animate: variants,
      initial: false,
      children: _jsx(Transition, {
        value: transition1,
        children: _jsx(motion.div, {
          ...restProps,
          ...gestureHandlers,
          className: cx(scopingClassNames, "framer-xknm58", className2, classNames),
          "data-framer-name": "Default",
          layoutDependency,
          layoutId: "otkPkq2LA",
          ref: refBinding,
          style: { ...style },
          children: _jsx(ComponentViewportProvider, {
            children: _jsx(SmartComponentScopedContainer, {
              className: "framer-1nbpcgl-container",
              isAuthoredByUser: true,
              isModuleExternal: true,
              layoutDependency,
              layoutId: "j87VKhaKk-container",
              nodeId: "j87VKhaKk",
              rendersWithMotion: true,
              scopeId: "c1tJgdhz5",
              children: _jsx(Ticker, {
                alignment: "center",
                direction: "left",
                fadeOptions: {
                  fadeAlpha: 0,
                  fadeContent: false,
                  fadeInset: 0,
                  fadeWidth: 25,
                  overflow: false
                },
                gap: 0,
                height: "100%",
                hoverFactor: 1,
                id: "j87VKhaKk",
                layoutId: "j87VKhaKk",
                padding: 0,
                paddingBottom: 0,
                paddingLeft: 0,
                paddingPerSide: false,
                paddingRight: 0,
                paddingTop: 0,
                sizingOptions: {
                  heightType: true,
                  widthType: true
                },
                slots: [
                  //=============================================================================
                  // SCROLLING TEXT SLOTS
                  //=============================================================================

                  // Word 1: "Digital Design •" (always visible)
                  _jsx(motion.div, {
                    className: "framer-1i51pui",
                    "data-framer-name": "Word 1",
                    layoutDependency,
                    layoutId: "vTxy98dbX",
                    children: _jsx(RichText, {
                      __fromCanvasComponent: true,
                      children: _jsx(React.Fragment, {
                        children: _jsx(motion.p, {
                          className: "framer-styles-preset-1gas3yb",
                          "data-styles-preset": "G59h8taEB",
                          children: " Digital Design •"
                        })
                      }),
                      className: "framer-wo9h6s",
                      "data-framer-name": "Text",
                      fonts: ["Inter"],
                      layoutDependency,
                      layoutId: "lLO1STnRu",
                      style: {
                        "--framer-link-text-color": "rgb(0, 153, 255)",
                        "--framer-link-text-decoration": "underline"
                      },
                      text: px8arhzxh,
                      verticalAlignment: "top",
                      withExternalLayout: true
                    })
                  }),

                  // Word 2: "Art Direction •" (conditional rendering)
                  visible && _jsx(motion.div, {
                    className: "framer-1jc5i38",
                    "data-framer-name": "Word 2",
                    layoutDependency,
                    layoutId: "gwat1YAfY",
                    children: _jsx(RichText, {
                      __fromCanvasComponent: true,
                      children: _jsx(React.Fragment, {
                        children: _jsx(motion.p, {
                          className: "framer-styles-preset-1gas3yb",
                          "data-styles-preset": "G59h8taEB",
                          children: " Art Direction •"
                        })
                      }),
                      className: "framer-1bgl0yw",
                      "data-framer-name": "Text",
                      fonts: ["Inter"],
                      layoutDependency,
                      layoutId: "xyfJvycAc",
                      style: {
                        "--framer-link-text-color": "rgb(0, 153, 255)",
                        "--framer-link-text-decoration": "underline"
                      },
                      text: YqnkipU9c,
                      verticalAlignment: "top",
                      withExternalLayout: true
                    })
                  }),

                  // Word 3: "Framer Development •" (conditional rendering)
                  visible1 && _jsx(motion.div, {
                    className: "framer-196wm2z",
                    "data-framer-name": "Word 3",
                    layoutDependency,
                    layoutId: "OBS6pi3Cf",
                    children: _jsx(RichText, {
                      __fromCanvasComponent: true,
                      children: _jsx(React.Fragment, {
                        children: _jsx(motion.p, {
                          className: "framer-styles-preset-1gas3yb",
                          "data-styles-preset": "G59h8taEB",
                          children: " Framer Development •"
                        })
                      }),
                      className: "framer-srdplu",
                      "data-framer-name": "Text",
                      fonts: ["Inter"],
                      layoutDependency,
                      layoutId: "Gl5St0mxC",
                      style: {
                        "--framer-link-text-color": "rgb(0, 153, 255)",
                        "--framer-link-text-decoration": "underline"
                      },
                      text: AW9pUoArR,
                      verticalAlignment: "top",
                      withExternalLayout: true
                    })
                  })
                ],
                speed: Oho2iCzl9,
                style: {
                  height: "100%",
                  width: "100%"
                },
                width: "100%"
              })
            })
          })
        })
      })
    })
  });
});

//=====================================================================================
// COMPONENT STYLING & CONFIGURATION
//=====================================================================================

// Combined CSS styles including typography and layout
var css2 = [
  "@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
  ".framer-B9zhW.framer-1es4o3a, .framer-B9zhW .framer-1es4o3a { display: block; }",

  // Main container styles
  ".framer-B9zhW.framer-xknm58 { align-content: center; align-items: center; display: flex; flex-direction: column; flex-wrap: nowrap; gap: 0px; height: min-content; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: 1440px; }",

  // Ticker container styles
  ".framer-B9zhW .framer-1nbpcgl-container { flex: none; height: 96px; position: relative; width: 100%; }",

  // Text slot container styles
  ".framer-B9zhW .framer-1i51pui, .framer-B9zhW .framer-1jc5i38, .framer-B9zhW .framer-196wm2z { align-content: flex-start; align-items: flex-start; display: flex; flex-direction: column; flex-wrap: nowrap; gap: 10px; height: min-content; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: min-content; }",

  // Text element styles
  ".framer-B9zhW .framer-wo9h6s, .framer-B9zhW .framer-1bgl0yw, .framer-B9zhW .framer-srdplu { flex: none; height: auto; position: relative; white-space: pre; width: auto; }",

  // Include typography CSS
  ...css
];

//=====================================================================================
// EXPORTS & CONFIGURATION
//=====================================================================================

// Apply CSS and create final component
var Framerc1tJgdhz5 = withCSS(Component, css2, "framer-B9zhW");
var stdin_default = Framerc1tJgdhz5;

// Component metadata
Framerc1tJgdhz5.displayName = "Ticker";
Framerc1tJgdhz5.defaultProps = {
  height: 96,
  width: 1440
};

// Property controls for Framer interface
addPropertyControls(Framerc1tJgdhz5, {
  px8arhzxh: {
    defaultValue: " Digital Design •",
    displayTextArea: false,
    title: "Word 1",
    type: ControlType.String
  },
  YqnkipU9c: {
    defaultValue: " Art Direction •",
    displayTextArea: false,
    title: "Word 2",
    type: ControlType.String
  },
  AW9pUoArR: {
    defaultValue: " Framer Development •",
    displayTextArea: false,
    title: "Word 3",
    type: ControlType.String
  },
  Oho2iCzl9: {
    defaultValue: 80,
    displayStepper: true,
    max: 1000,
    min: 0,
    step: 5,
    title: "Speed",
    type: ControlType.Number
  }
});

// Add fonts configuration with Inter and Open Sauce Sans
addFonts(Framerc1tJgdhz5, [
  {
    explicitInter: true,
    fonts: [
      { family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F", url: "https://framerusercontent.com/assets/5vvr9Vy74if2I6bQbJvbw7SY1pQ.woff2", weight: "400" },
      { family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116", url: "https://framerusercontent.com/assets/EOr0mi4hNtlgWNn9if640EZzXCo.woff2", weight: "400" },
      { family: "Inter", source: "framer", style: "normal", unicodeRange: "U+1F00-1FFF", url: "https://framerusercontent.com/assets/Y9k9QrlZAqio88Klkmbd8VoMQc.woff2", weight: "400" },
      { family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0370-03FF", url: "https://framerusercontent.com/assets/OYrD2tBIBPvoJXiIHnLoOXnY9M.woff2", weight: "400" },
      { family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF", url: "https://framerusercontent.com/assets/JeYwfuaPfZHQhEG8U5gtPDZ7WQ.woff2", weight: "400" },
      { family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD", url: "https://framerusercontent.com/assets/vQyevYAyHtARFwPqUzQGpnDs.woff2", weight: "400" },
      { family: "Inter", source: "framer", style: "normal", unicodeRange: "U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB", url: "https://framerusercontent.com/assets/b6Y37FthZeALduNqHicBT6FutY.woff2", weight: "400" }
    ]
  },
  ...TickerFonts,
  ...getFontsFromSharedStyle(fonts)
], { supportsExplicitInterCodegen: true });

export {
  stdin_default
};